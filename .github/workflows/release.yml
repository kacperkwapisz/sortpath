name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build binaries
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          mkdir -p dist
          
          # Build for multiple platforms
          GOOS=linux GOARCH=amd64 go build -ldflags="-X main.Version=${VERSION}" -o dist/sortpath-linux-amd64 ./cmd/sortpath.go
          GOOS=linux GOARCH=arm64 go build -ldflags="-X main.Version=${VERSION}" -o dist/sortpath-linux-arm64 ./cmd/sortpath.go
          
          GOOS=darwin GOARCH=amd64 go build -ldflags="-X main.Version=${VERSION}" -o dist/sortpath-darwin-amd64 ./cmd/sortpath.go
          GOOS=darwin GOARCH=arm64 go build -ldflags="-X main.Version=${VERSION}" -o dist/sortpath-darwin-arm64 ./cmd/sortpath.go
          
          GOOS=windows GOARCH=amd64 go build -ldflags="-X main.Version=${VERSION}" -o dist/sortpath-windows-amd64.exe ./cmd/sortpath.go
          
          # Make binaries executable
          chmod +x dist/sortpath-*

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
          name: Release ${{ steps.get_version.outputs.VERSION }}
          tag_name: v${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}